/**
* Media query
*/

@mixin modular-mq($breakpoint, $orientation: portrait) {

  @if  $breakpoint == mobile{
    @if $orientation == landscape{
      @media screen and (max-width: $screen-sm-min) and (orientation: $orientation ) { @content; }
    }
    @else{
      @media screen and (max-width: $screen-sm-min) { @content; }
    }
  }
  @else if $breakpoint == tablet {
    @if $orientation == landscape{
      @media screen and (min-width: $screen-sm-min) and (orientation: $orientation ) { @content; }
    }
    @else{
      @media screen and (min-width: $screen-sm-min) { @content; }
    }

  }
  @else if $breakpoint == desktop {
    @media screen and (min-width: $screen-md-min) { @content; }
  }
  @else if $breakpoint == desktop-large {
    @media screen and (min-width: $screen-lg-min) { @content; }
  }

}

/**
* background image
*/
@mixin bg_img($image, $repeat: no-repeat, $attachment: null, $position: center){
  background: url("#{$img-path}/#{$image}") $repeat $attachment $position;
}

/**
* border radius
* depend on mixins from bourbon lib
*/

@mixin border-radius($radius){
  @include border-bottom-radius($radius);
  @include border-top-radius($radius);
}

/**
* set same dimensions for width and height
*/

@mixin square-dim($dim){
  width: $dim;
  height: $dim;
}

/**
* Sets same property for different breakpoints in one time
* e.g
* margin-top: 30px
* @include modular-mq(tablet){
*   margin-top: 60px
* }
* @include modular-mq(desktop){
*   margin-top: 90px
* }
* values ar in order: mobile, tablet, desktop
*/

@mixin modify-property-by-device($property-mame, $values){

  #{$property-mame}: nth($values, 1);

  @include modular-mq(tablet){
    #{$property-mame}: nth($values, 2);
  }

  @include modular-mq(desktop){
    #{$property-mame}: nth($values, 3);
  }
}

// opacity
@mixin opacity($value){
  -moz-opacity: $value;
  -khtml-opacity: $value;
  opacity: $value;
  -ms-filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=$value);
}